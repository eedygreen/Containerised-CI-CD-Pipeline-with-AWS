pipeline {
  agent any
  stages {
    stage('Lint HTML') {
      steps {
        sh 'tidy -q -e Container-pipeline/index.html'
      }
    }

    stage('Build Docker Image') {
      steps {
        withCredentials(bindings: [[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]) {
          sh '''
                        docker build -t myprofile/profile .
                    '''
        }

      }
    }

    stage('Push Image To Dockerhub') {
      steps {
        withCredentials(bindings: [[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]) {
          sh '''
                        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                        docker push myprofile/profile
                    '''
        }

      }
    }

    stage('Set current kubectl context') {
      steps {
        withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
          sh '''
                        kubectl config use-context arn:aws:eks:us-east-1:501925613140:cluster/myprofile
                        
                    '''
        }

      }
    }

    stage('Deploy blue container') {
      steps {
        withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
          sh '''
                        kubectl apply -f ./blue-deployment-controller.json
                    '''
        }

      }
    }

    stage('Deploy green container') {
      steps {
        withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
          sh '''
                        kubectl apply -f ./green-deployment-controller.json
                    '''
        }

      }
    }

    stage('Create the service in the cluster, redirect to blue') {
      steps {
        withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
          sh '''
                        kubectl apply -f ./blue-deployment-service.json
                    '''
        }

      }
    }

    stage('Wait user approve') {
      steps {
        input 'Ready to redirect traffic to green?'
      }
    }

    stage('Create the service in the cluster, redirect to green') {
      steps {
        withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
          sh '''
                        kubectl apply -f ./green-deployment-service.json
                    '''
        }

      }
    }

  }
}
